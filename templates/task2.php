<h3>2. Дан код:                            <br/>
    class A {                              <br/>
        public function foo() {            <br/>
            static $x = 0;                 <br/>
            echo ++$x;                     <br/>
        }                                  <br/>
    }                                      <br/>
    $a1 = new A();                         <br/>
    $a2 = new A();                         <br/>
    $a1->foo();                            <br/>
    $a2->foo();                            <br/>
    $a1->foo();                            <br/>
    $a2->foo();                            <br/>
    Что он выведет на каждом шаге? Почему? <br/>
</h3>

<p>Данный класс содержит метод, к которому можно обратиться отовсюду. $x является статической и принадлежит только
классу, а не его экземплярам. В данном коде будет создано два одинаковых объекта A1 и A2 у которых будет метод foo, но которым $x не принадлежит. При обращении к методу foo $x будет вести себя не зависимо от созданных объектов. Обратились 4 раза, соответственно получим на 
выводе:</p>

<?php

class A { 
    public function foo() { 
        static $x = 0; 
        echo ++$x . '<br/>'; 
    } 
} 

$a1 = new A();
$a2 = new A(); 

$a1->foo();
$a2->foo(); 

$a1->foo(); 
$a2->foo(); 

